net ninja
ep.86.
Asynchronous javscript
-javascript is synchronous which means single threaded, which 
execute the code line by line,
so if we call data from api or any data it takes time,
before the data call is completed the next code is not executed
so it creates problem so asynchrounous javascript is introduce
--code which can start now and finish later.
which doesnt effect the other code to execute before its own  code
is finish, the moment it finish it callback the function and 
execute it
eg.
console.log(1)
console.log(2)

setTimeout(()=> {

 console.log('callback function is called') //setTimeout is asynchronous,
                                        it is call after 2sec and doesnt block the other line of code
}, 2000)
console.log(3)
console.log(4)

API stands for Application Programming Interface. An API is a software intermediary that allows two applications to talk to each other. 
 In other words, an API is the messenger that delivers your request to the provider that you’re 
requesting it from and then delivers the response back to you.

How do APIs work?
Imagine a waiter in a restaurant.  You, the customer, are sitting at the table with a menu of choices to order from, and the kitchen 
is the provider who will fulfill your order.

You need a link to communicate your order to the kitchen and then to deliver your food back to your table. It can’t be the chef because she’s
 cooking in the kitchen. You need something to connect the customer who’s 
ordering food and the chef who prepares it.  That’s where the waiter — or the API —  enters the picture.

The waiter takes your order, delivers it to the kitchen, telling the kitchen what to do. It then delivers the response, in this case, the food, back
 to you. Moreover, if it’s designed correctly, hopefully, your order won’t crash!

--The API is not the database or even the server, it is the code that governs the access point(s) for the server.

ep.10
promises- to avoid callback function, less code
